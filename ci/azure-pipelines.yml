trigger:
  - main

# Bende: https://github.com/microsoft/azure-pipelines-tasks/issues/18242
# pool: default

pool:
  vmImage: ubuntu-latest

variables:
  azureServiceConnection: 'azure-sc'
  apiproject: 'api/src/api/api.csproj'
stages:
  - stage: ci
    dependsOn: []

    jobs:
      - deployment: BuildAndDeploy
        environment: dw-swa-demo
        workspace:
          clean: all
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - task: AzureCLI@2
                  displayName: Biceps deployment via CLI
                  inputs:
                    azureSubscription: $(azureServiceConnection)
                    scriptLocation: 'inlineScript'
                    scriptType: bash
                    inlineScript: |
                      az config set bicep.use_binary_from_path=False
                      az bicep install

                      az deployment group create -n dw-swa-demo -g dw-swa-demo -f $(Build.SourcesDirectory)/deploy/main.bicep -p $(Build.SourcesDirectory)/deploy/parameters.json -p clientsecret=$(CLIENTSECRET)

                      deployment_token=$(az deployment group show --resource-group dw-swa-demo -n dw-demo-swa --query properties.outputs.deployment_token.value | tr -d '"')
                      echo "deployment token is $deployment_token"
                      echo "##vso[task.setvariable variable=deployment_token;issecret=true]$deployment_token"

                - task: UseDotNet@2
                  displayName: 'Install .NET 6.x SDK'
                  inputs:
                    version: '7.x'

                - task: DotNetCoreCLI@2
                  displayName: 'Restore nuget packages'
                  inputs:
                    command: 'restore'
                    projects: '$(apiproject)'
                    feedsToUse: config

                - task: DotNetCoreCLI@2
                  displayName: 'Build function'
                  inputs:
                    command: 'build'
                    arguments: '--no-restore --configuration release'
                    projects: $(apiproject)

                - task: DotNetCoreCLI@2
                  displayName: 'Publish function'
                  inputs:
                    command: 'publish'
                    arguments: '--no-restore --no-build --configuration release --output $(Build.ArtifactStagingDirectory)/function'
                    projects: $(apiproject)
                    publishWebProjects: false
                    zipAfterPublish: true

                - task: AzureFunctionApp@2
                  displayName: 'Deploy Function App'
                  inputs:
                    azureSubscription: '$(azureServiceConnection)'
                    appType: functionAppLinux
                    appName: 'func-dw-demo'
                    runtimeStack: 'DOTNET-ISOLATED|7.0'
                    deploymentMethod: runFromPackage
                    resourceGroupName: 'dw-swa-demo'
                    package: '$(Build.ArtifactStagingDirectory)/function/api.zip'

                - task: AzureStaticWebApp@0
                  displayName: Build and deploy SWA
                  inputs:
                    app_location: /
                    app_build_command: yarn nx build
                    # leeg want byof
                    api_location: ''
                    output_location: dist/dw-swa-demo
                    azure_static_web_apps_api_token: $(deployment_token)
